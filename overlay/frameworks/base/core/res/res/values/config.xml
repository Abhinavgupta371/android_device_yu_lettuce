<?xml version="1.0" encoding="utf-8"?>
<!--
 /*
 ** Copyright 2014, The CyanogenMod Project
 **
 ** Licensed under the Apache License, Version 2.0 (the "License");
 ** you may not use this file except in compliance with the License.
 ** You may obtain a copy of the License at
 **
 **     http://www.apache.org/licenses/LICENSE-2.0
 **
 ** Unless required by applicable law or agreed to in writing, software
 ** distributed under the License is distributed on an "AS IS" BASIS,
 ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ** See the License for the specific language governing permissions and
 ** limitations under the License.
 */
 -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Minimum allowable screen brightness to use in a very dark room.
         This value sets the floor for the darkest possible auto-brightness
         adjustment.  It is expected to be somewhat less than the first entry in
         config_autoBrightnessLcdBacklightValues so as to allow the user to have
         some range of adjustment to dim the screen further than usual in very
         dark rooms. The contents of the screen must still be clearly visible
         in darkness (although they may not be visible in a bright room). -->
    <integer name="config_screenBrightnessDark">5</integer>

    <!-- Flag indicating whether we should enable the automatic brightness in Settings.
                  config_hardware_automatic_brightness_available is not set, so we will use software implementation -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>9</item>
        <item>30</item>
        <item>100</item>
        <item>325</item>
        <item>1250</item>
        <item>3500</item>
        <item>10000</item>
        <item>20000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>18</item>
        <item>30</item>
        <item>59</item>
        <item>74</item>
        <item>92</item>
        <item>118</item>
        <item>155</item>
        <item>222</item>
        <item>255</item>
    </integer-array>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
                  autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/arm64/boot-framework.vdex"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/oat/arm64/services.vdex"</item>
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/arm64/boot.vdex"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/system/framework/arm64/boot-core-libart.vdex"</item>
   </string-array>
 
    <!-- Values for GPS configuration -->
    <string-array name="config_gpsParameters">
        <item>XTRA_SERVER_1=https://xtrapath1.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_2=https://xtrapath2.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_3=https://xtrapath3.izatcloud.net/xtra3grc.binn</item>
        <item>XTRA_VERSION_CHECK=1</item>
        <item>XTRA_CA_PATH=/system/etc/security/cacerts</item>
        <item>NTP_SERVER=asia.pool.ntp.org</item>
        <item>CAPABILITIES=0x37</item>
        <item>SUPL_ES=0</item>
        <item>SUPL_VER=0x10000</item>
        <item>LPP_PROFILE=2</item>
        <item>NMEA_PROVIDER=0</item>
        <item>A_GLONASS_POS_PROTOCOL_SELECT=0</item>
        <item>ERR_ESTIMATE=0</item>
        <item>INTERMEDIATE_POS=0</item>
        <item>LPPE_CP_TECHNOLOGY=0</item>
        <item>LPPE_UP_TECHNOLOGY=0</item>
        <item>USE_EMERGENCY_PDN_FOR_EMERGENCY_SUPL=1</item>
    </string-array>

    <!-- Flag specifying whether VoLTE TTY is supported -->
    <bool name="config_carrier_volte_tty_supported">false</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether VT should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_vt_available">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>
 
    <!-- Flag specifying whether WFC over IMS is available on device -->
    <bool name="config_device_wfc_ims_available">true</bool>
  
    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <!-- Flag indicating which package name can access the persistent data partition -->
    <string name="config_persistentDataPackageName" translatable="false">com.google.android.gms</string>

    <!-- Enable doze powersaving mode -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>
 
    <!-- Device configuration adjusting the minfree tunable in the
         lowmemorykiller in the kernel.  A high value will cause the lowmemorykiller to
         fire earlier, keeping more memory in the file cache and preventing I/O
         thrashing, but allowing fewer processes to stay in memory.  A low value will
         keep more processes in memory but may cause thrashing if set too low.  Directly
         added to the default value chosen by ActivityManager based on screen
         size and total memory for the largest lowmemorykiller bucket, and scaled
         proportionally to the smaller buckets. 0 keeps the default. -->
   <integer name="config_lowMemoryKillerMinFreeKbytesAdjust">51200</integer>
 
    <!-- Device configuration adjusting the /proc/sys/vm/extra_free_kbytes
         tunable in the kernel (if it exists).  0 uses the default value chosen by
         ActivityManager.  A positive value  will increase the amount of memory that the
         kernel tries to keep free, reducing allocation time and causing the
         lowmemorykiller to kill earlier.  A negative value allows more memory to be
         used by processes but may cause more allocations to block waiting on disk I/O
         or lowmemorykiller.  Directly added to the default value chosen by
         ActivityManager based on screen size. -->
   <integer name="config_extraFreeKbytesAdjust">51200</integer>
 
</resources>
